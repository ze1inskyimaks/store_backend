using IdentityService.Extensions;
using IdentityService.Utilities;

var builder = WebApplication.CreateBuilder(args);

// üîπ –î–æ–¥–∞—î–º–æ —Å–µ—Ä–≤—ñ—Å–∏
builder.Services.ConfigureServices(builder.Configuration);

var app = builder.Build();

// üîπ –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ Middleware –±–µ–∑ –≤–∏–Ω–æ—Å—É
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseAuthentication(); // üî• –ú–∞—î –±—É—Ç–∏ –ø–µ—Ä–µ–¥ Authorization!
app.UseAuthorization();
app.MapControllers();

// üîπ –°—Ç–≤–æ—Ä—é—î–º–æ —Ä–æ–ª—ñ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –ø—Ä–æ–≥—Ä–∞–º–∏
await RoleInitializer.EnsureRolesAsync(app.Services);

app.Run();

/*
{
    "id": 0,
    "userName": "string",
    "email": "string@email.com",
    "passwordHash": "strinG1"
}
*/